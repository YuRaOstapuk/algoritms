Какова временная сложность?
// 1.
// void test1(int n)
// {
//    if (n==1)
//       return;
//    for (int i=1; i<=n; i++)
//        for (int j=1; j<=n; j++)
//            System.out.println("*");
//            break;
// }

Если break за пределами внешнего цикла компеляция не произойдет
Времення сложность 0(n),так как break стоит в цикле for ,  цикл внешний закончит работу после первой итерации , а внутренний выполнит равное n . 


// void test2(int n)
// {
//    int a = 0;
// for (i = 0; i < n; i++)
//    for (j = n; j > i; j--)
//        a = a + i + j;   
// }

в этом примере в теле функции два цикла вложенных поэтому 0(n^2)


LEVEL 2
// void test2(int n)
// {
//    int a = 0;
// for (i = 0; i < n; i++)
//    for (j = n; j > i; j--)
//        a = a + i + j;   
// }
тут не верно синтаксически дан пример 
но если давать временную сложность ему то будет 0(n^2)
цикл в цикле
// *void test4(int n)
// {
//    int a = 0, i = n;
// while (i > 0) {
//    a += i;
//    i /= 2;
// }
// }
в этом примере алгоритм бинарного поиска
0(log n)